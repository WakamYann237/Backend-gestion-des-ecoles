spring.config.import=optional:dotenv:.env
spring.application.name=service-authentification
# Configuration de la base de données
spring.datasource.url=jdbc:postgresql://localhost:5432/authdb?sslmode=disable
#jdbc java data base connector
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
./mvnw spring-boot:run
# JPA / Hibernate : API qui permet de manipuler notre bd . fait un mapping du code java qu on a ecrit avec la bd
spring.jpa.hibernate.ddl-auto=update
#pour dire ce qui va se passer a chaque fois qu on demarre notre application dans notre cas c est update. donc a chaque fois qu on va creer une entite dans notre code il va pouvoir les mettre a jour par rapport notre BD
spring.jpa.show-sql=true
#pour dire qu on veut voir les requette sql dans les logs par exemple lors du demarrage de l' application
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#classe qu on va utiliser pour le dialect
spring.jpa.properties.hibernate.format_sql=true
# JWT configuration
app.secret-key=${APP_SECRET_KEY}
#duree de la cle 6mois
app.expiration=15552000000      
app.issuer=MonAppSpringBoot   
# Nom de l'émetteur du token
logging.level.org.springframework.web=DEBUG
logging.level.your.package=DEBUG
spring.jpa.open-in-view=false
logging.level.org.springframework.security=DEBUG
spring.cloud.config.enabled=false
server.servlet.logging.request-details=true
logging.level.org.springframework.web.servlet.DispatcherServlet=DEBUG

eureka.client.enabled=false
spring.cloud.config.enabled=false
spring.cloud.config-import-check.enabled=false
server.port=9000